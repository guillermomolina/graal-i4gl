package org.guillermomolina.i4gl.nodes.arithmetic;

import com.oracle.truffle.api.dsl.Specialization;
import com.oracle.truffle.api.nodes.NodeInfo;

import org.guillermomolina.i4gl.nodes.BinaryExpressionNode;
import org.guillermomolina.i4gl.nodes.utils.BinaryArgumentPrimitiveTypes;
import org.guillermomolina.i4gl.parser.types.primitive.BigIntDescriptor;
import org.guillermomolina.i4gl.parser.types.primitive.IntDescriptor;

/**
 * Node representing I4GL's div operation which is division on whole numbers.
 *
 * This node uses specializations which means that it is not used directly but completed node is generated by Truffle.
 * {@link DivideIntegerNodeGen}
 */
@NodeInfo(shortName = "div")
public abstract class DivideIntegerNode extends BinaryExpressionNode {

	DivideIntegerNode() {
        this.typeTable.put(new BinaryArgumentPrimitiveTypes(IntDescriptor.SINGLETON, IntDescriptor.SINGLETON), IntDescriptor.SINGLETON);
        this.typeTable.put(new BinaryArgumentPrimitiveTypes(IntDescriptor.SINGLETON, BigIntDescriptor.SINGLETON), BigIntDescriptor.SINGLETON);
        this.typeTable.put(new BinaryArgumentPrimitiveTypes(BigIntDescriptor.SINGLETON, IntDescriptor.SINGLETON), BigIntDescriptor.SINGLETON);
        this.typeTable.put(new BinaryArgumentPrimitiveTypes(BigIntDescriptor.SINGLETON, BigIntDescriptor.SINGLETON), BigIntDescriptor.SINGLETON);
    }

    @Specialization
    int divInt(int left, int right) {
	    return left / right;
    }

	@Specialization
	long divLong(long left, long right) {
		return left / right;
	}
}
